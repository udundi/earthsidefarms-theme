{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .collection-tabs__button-container {
    width: 100%;
    text-align: center;
  }

  .collection-tabs {
    padding: 10px;
    border: 1px solid #3356AE;
    border-radius: 50px;
    margin: 0 auto 85px auto;
    text-align: center;
    display: inline-block;
  }

  .collection-tabs .collection-tab-btn {
    font-style: normal;
    font-weight: 900;
    font-size: 24px;
    line-height: 140%;
    border: none;
    background: transparent;
    color: #3356AE;
    float: left;
  }

  .collection-tabs .collection-tab-btn::after {
    box-shadow: none;
  }

  .collection-tabs .collection-tab-btn.active {
    background: #3356AE;
    color: #fff;
  }

  @media (max-width: 768px) {
    #shopify-section-{{ section.id }} {
      margin-top: 0;
    }
    
    .collection-tabs {
      max-width: 300px;
      padding: 6px;
      margin: 0 auto 36px auto;
    }

    .collection-tabs .collection-tab-btn.button {
      font-size: 11px;
      line-height: 140%;
      padding: 8px 12px;
      min-width: auto;
      min-height: auto;
    }
  }
{%- endstyle -%}

<div class="collection-tabs__container section-{{ section.id }}-padding">
  {% if request.page_type == 'collection' %}
    {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
      <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
        <form class="facets-vertical-form" id="FacetSortForm">
          <div class="facet-filters sorting caption">
            <div class="facet-filters__field">
              <h2 class="facet-filters__label caption-large text-body">
                <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
              </h2>
              <div class="select">
                {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                <select name="sort_by" class="facet-filters__sort select__select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
                  {%- for option in collection.sort_options -%}
                    <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                  {%- endfor -%}
                </select>
                {% render 'icon-caret' %}
              </div>
            </div>
            <noscript>
              <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
            </noscript>
          </div>
  
          <div class="product-count-vertical light" role="status">
            <h2 class="product-count__text text-body">
              <span id="ProductCountDesktop">
                {%- if collection.results_count -%}
                  {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
                {%- elsif collection.products_count == collection.all_products_count -%}
                  {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                {%- else -%}
                  {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
                {%- endif -%}
              </span>
            </h2>
            <div class="loading-overlay__spinner">
              <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
              </svg>
            </div>
          </div>  
        </form>
      </facet-filters-form>
    {%- endif -%}
  {% endif %}
  
  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {% if request.page_type == 'collection' %}
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
          {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
        </aside>
      {%- endif -%}
    {% endif %}

    {% for block in section.blocks %}
      {% if request.page_type == 'collection' and collection.handle == block.settings.collection.handle %}
        {% assign collectionPageHasTabs = true %}
      {% else collection.handle == 'all' or collection.handle == 'all-products' %}
        {% assign collectionPageHasTabs = true %}
      {% endif %}
    {% endfor %}

    {% for block in section.blocks %}
      {% if request.page_type == 'collection' %}
        {% if collectionPageHasTabs %}
          {% assign showTabs = true %}
          {% assign onBlockCollectionPage = true %}
          
          {% if block.settings.collection.products.size > 0 %}
            {% if collectionProducts %}
              {% assign collectionProducts = collectionProducts | concat:block.settings.collection.products %}
            {% else %}
              {% assign collectionProducts = block.settings.collection.products %}
            {% endif %}
          {% endif %}
        {% else %}
          {% assign showTabs = false %}
        {% endif %}

      {% else %}
        {% assign showTabs = true %}
        
        {% if block.settings.collection.products.size > 0 %}
          {% if collectionProducts %}
              {% assign collectionProducts = collectionProducts | concat:block.settings.collection.products %}
          {% else %}
              {% assign collectionProducts = block.settings.collection.products %}
          {% endif %}
        {% endif %}

      {% endif %}
    {% endfor %}

    {% for p in collectionProducts %}
                {{ p.title }}
              {% endfor %}

    {% if showTabs != true %}
      {% assign collectionProducts = collection.products %}
    {% else %}
      {% assign collection.products = collectionProducts %}
    {% endif %}

    <br/>
    Stop
    <br/>

    {% for p in collection.products %}
                {{ p.title }}
              {% endfor %}

    <script>
      const x = {{ collectionProducts | json }} 
      console.log(x, {{showTabs}})
    </script>

    {% if showTabs %}
      <div class="collection-tabs__button-container">
        <div class="collection-tabs">
          {% assign shownShopAll = false %}
          {% for block in section.blocks %}
            <button 
              id="{{ block.settings.collection.handle }}TabBtn" 
              class="collection-tab-btn button {% if collection.handle == block.settings.collection.handle %} active{% else %}{% if collection.handle == 'all' and block.settings.collection.handle == 'all-products' %} active{% else %}{% if forloop.index == 1 and onBlockCollectionPage != true %} active{% endif %}{% endif %}{% endif %}"
            >
              {%- if shownShopAll -%}
                {{ block.settings.collection.title }}
              {%- else -%}
                {%- if block.settings.collection.handle == 'all' or block.settings.collection.handle == 'all-products' %}Shop All{% else %}{{ block.settings.collection.title }}{% endif -%}
              {%- endif -%}
            </button>
            
            {% if block.settings.collection.handle == 'all' or block.settings.collection.handle == 'all-products' %}  
              {% assign shownShopAll = true %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endif %}
    
    <div class="product-grid-container" id="ProductGridContainer">
      {%- if collectionProducts.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>
    
            <ul id="product-grid" data-id="{{ section.id }}" class="
              grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
              grid--{{ section.settings.columns_desktop }}-col-desktop">
              {%- for product in collectionProducts -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li class="grid__item">
                  {% render 'product-card', 
                    product: product, 
                    show_collection: true, 
                    current_collection: product.collections[1],
                    show_cta: true 
                  %}
                </li>
              {%- endfor -%}
            </ul>
          </div>
        {%- endif -%}
    </div>
  </div>
</div>


<script>
$(document).ready(function() {

  $(".collection-tab-btn").each(function() {
    $(this).click(function() {
      const tabId = $(this).attr('id');

      $(".product-grid-container .product-card").each(function() {
        
        $(this).css("display", "none")
        
        const productCollection = $(this).data("product-collection") + "TabBtn"

        if (tabId == productCollection || tabId == 'all-productsTabBtn' || tabId == 'all-productsTabBtn') {
          $(this).css("display", "block")
        }
      })
      
      $(".collection-tab-btn").each(function() {
        $(this).removeClass("active")
      })
      
      $(this).addClass("active")
    })
  })
});
</script>


{% schema %}
{
  "name": "Collections Tabs",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "Enable filtering (Only on collection page)",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "Enable sorting (Only on collection page)"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Add collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collections Tabs",
      "blocks": [
        {
          "type": "item"
        }
      ]
    }
  ]
}
{% endschema %}